{"ast":null,"code":"import _objectSpread from \"/Users/mohamd/Documents/Redux-React-nodejs-App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { IS_FETCHING_DATA, ERROR, FETCH_DATA, POST_REQUEST, DELETE_REQUEST } from '../actions /actions';\nconst initialState = {\n  data: [],\n  error: \"\",\n  isLoading: true\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case IS_FETCHING_DATA:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case FETCH_DATA:\n      return _objectSpread({}, state, {\n        data: action.payload.data,\n        isLoading: false\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload.err\n      });\n\n    case POST_REQUEST:\n      return _objectSpread({}, state, {\n        data: action.payload.data\n      });\n\n    default:\n      return state;\n  }\n}\nexport default reducer;","map":{"version":3,"sources":["/Users/mohamd/Documents/Redux-React-nodejs-App/src/reducer /reducer.js"],"names":["IS_FETCHING_DATA","ERROR","FETCH_DATA","POST_REQUEST","DELETE_REQUEST","initialState","data","error","isLoading","reducer","state","action","type","payload","err"],"mappings":";AAAA,SAAQA,gBAAR,EAAyBC,KAAzB,EAA+BC,UAA/B,EAA0CC,YAA1C,EAAuDC,cAAvD,QAA4E,qBAA5E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,KAAK,EAAG,EAFS;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAArB;AAOA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA8C;AAEjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,gBAAL;AACI,+BAAWU,KAAX;AAAmBF,QAAAA,SAAS,EAAG;AAA/B;;AACJ,SAAKN,UAAL;AACI,+BAAWQ,KAAX;AAAmBJ,QAAAA,IAAI,EAAGK,MAAM,CAACE,OAAP,CAAeP,IAAzC;AAA+CE,QAAAA,SAAS,EAAG;AAA3D;;AACJ,SAAKP,KAAL;AACI,+BAAWS,KAAX;AAAmBH,QAAAA,KAAK,EAAGI,MAAM,CAACE,OAAP,CAAeC;AAA1C;;AACJ,SAAKX,YAAL;AACI,+BAAWO,KAAX;AAAmBJ,QAAAA,IAAI,EAAGK,MAAM,CAACE,OAAP,CAAeP;AAAzC;;AACJ;AACI,aAAOI,KAAP;AAVR;AAcH;AAED,eAAeD,OAAf","sourcesContent":["import {IS_FETCHING_DATA,ERROR,FETCH_DATA,POST_REQUEST,DELETE_REQUEST} from '../actions /actions';\n\nconst initialState = {\n    data : [],\n    error : \"\",\n    isLoading : true\n}\n\n\nexport function reducer(state = initialState ,action){\n\n    switch(action.type){\n        case IS_FETCHING_DATA : \n            return {...state , isLoading : true}\n        case FETCH_DATA :\n            return {...state , data : action.payload.data ,isLoading : false} ;\n        case ERROR : \n            return {...state , error : action.payload.err }    \n        case POST_REQUEST :\n            return {...state , data : action.payload.data }      \n        default :\n            return state ;\n    \n    }\n\n}\n\nexport default reducer ;\n\n\n"]},"metadata":{},"sourceType":"module"}