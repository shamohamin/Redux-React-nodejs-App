{"ast":null,"code":"import _objectSpread from \"/Users/mohamd/Documents/server-redux-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { IS_FETCHING_DATA, ERROR, FETCH_DATA, POST_REQUEST } from '../actions /actions';\nconst initialState = {\n  data: [],\n  error: \"\",\n  isLoading: true\n};\nexport function reducer(state = initialState, actions) {\n  switch (actions) {\n    case IS_FETCHING_DATA:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case FETCH_DATA:\n      return _objectSpread({}, state, {\n        data: actions.payload.data,\n        isLoading: false\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        error: actions.payload.err\n      });\n\n    case POST_REQUEST:\n      return _objectSpread({}, state, {\n        data: actions.payload.data\n      });\n\n    default:\n      return {\n        state\n      };\n  }\n}\nexport default reducer;","map":{"version":3,"sources":["/Users/mohamd/Documents/server-redux-app/src/reducer /reducer.js"],"names":["IS_FETCHING_DATA","ERROR","FETCH_DATA","POST_REQUEST","initialState","data","error","isLoading","reducer","state","actions","payload","err"],"mappings":";AAAA,SAAQA,gBAAR,EAAyBC,KAAzB,EAA+BC,UAA/B,EAA0CC,YAA1C,QAA6D,qBAA7D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,KAAK,EAAG,EAFS;AAGjBC,EAAAA,SAAS,EAAG;AAHK,CAArB;AAOA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,OAAvC,EAA+C;AAElD,UAAOA,OAAP;AAEI,SAAKV,gBAAL;AACI,+BAAWS,KAAX;AAAmBF,QAAAA,SAAS,EAAG;AAA/B;;AACJ,SAAKL,UAAL;AACI,+BAAWO,KAAX;AAAmBJ,QAAAA,IAAI,EAAGK,OAAO,CAACC,OAAR,CAAgBN,IAA1C;AAAgDE,QAAAA,SAAS,EAAG;AAA5D;;AACJ,SAAKN,KAAL;AACI,+BAAWQ,KAAX;AAAmBH,QAAAA,KAAK,EAAGI,OAAO,CAACC,OAAR,CAAgBC;AAA3C;;AACJ,SAAKT,YAAL;AACI,+BAAWM,KAAX;AAAmBJ,QAAAA,IAAI,EAAGK,OAAO,CAACC,OAAR,CAAgBN;AAA1C;;AACJ;AACI,aAAO;AAACI,QAAAA;AAAD,OAAP;AAXR;AAeH;AAED,eAAeD,OAAf","sourcesContent":["import {IS_FETCHING_DATA,ERROR,FETCH_DATA,POST_REQUEST} from '../actions /actions';\n\nconst initialState = {\n    data : [],\n    error : \"\",\n    isLoading : true\n}\n\n\nexport function reducer(state = initialState ,actions){\n\n    switch(actions){\n\n        case IS_FETCHING_DATA : \n            return {...state , isLoading : true}\n        case FETCH_DATA :\n            return {...state , data : actions.payload.data ,isLoading : false}\n        case ERROR : \n            return {...state , error : actions.payload.err }    \n        case POST_REQUEST :\n            return {...state , data : actions.payload.data }   \n        default :\n            return {state}\n    \n    }\n\n}\n\nexport default reducer ;\n\n\n"]},"metadata":{},"sourceType":"module"}