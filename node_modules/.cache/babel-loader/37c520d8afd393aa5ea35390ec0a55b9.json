{"ast":null,"code":"var _jsxFileName = \"/Users/mohamd/Documents/server-redux-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchData } from './fetchData';\nexport class App extends React.Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, !this.props.isLoading ? React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.data.map(i => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"i.first_name\"))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"isLoading\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data,\n  error: state.error,\n  isLoading: state.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: () => fetchData()\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mohamd/Documents/server-redux-app/src/App.js"],"names":["React","connect","fetchData","App","Component","componentDidMount","props","render","isLoading","data","map","i","mapStateToProps","state","error","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEvCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWJ,SAAX;AACD;;AAEDK,EAAAA,MAAM,GAAE;AAEN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,CAAC,KAAKD,KAAL,CAAWE,SAAZ,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzB,CAAL,CAAxB,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF;AAWD;;AAnBsC;;AAyBzC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAEhCJ,EAAAA,IAAI,EAAGI,KAAK,CAACJ,IAFmB;AAGhCK,EAAAA,KAAK,EAAGD,KAAK,CAACC,KAHkB;AAIhCN,EAAAA,SAAS,EAAGK,KAAK,CAACL;AAJc,CAAL,CAA7B;;AAQA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AAEtCd,EAAAA,SAAS,EAAG,MAAMA,SAAS;AAFW,CAAL,CAAnC;;AAOA,eAAeD,OAAO,CACpBW,eADoB,EAEpBG,kBAFoB,CAAP,CAGbZ,GAHa,CAAf","sourcesContent":["import React from 'react' ;\nimport './App.css' ;\nimport {connect} from 'react-redux' ;\nimport {fetchData} from './fetchData';\n\nexport class App extends React.Component {\n  \n  componentDidMount(){\n    this.props.fetchData();\n  }\n\n  render(){\n\n    return(\n      <div>\n\n        {!this.props.isLoading ? <ul>{this.props.data.map(i => <li>i.first_name</li> )}</ul> : \n        <h1>\n          isLoading\n        </h1>}\n      </div>\n    );\n\n\n  }\n\n\n\n}\n\nconst mapStateToProps = state => ({\n\n  data : state.data,\n  error : state.error,\n  isLoading : state.isLoading  \n\n})\n\nconst mapDispatchToProps = dispatch => ({\n\n  fetchData : () => fetchData() \n\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}